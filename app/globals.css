@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-color: #091922;
  --background-color: #091922;
}

body {
  color: rgb(var(--foreground-rgb));
  background: #091922;
  overflow-x: hidden;
}

.font-pixel {
  font-family: var(--font-pixel);
  letter-spacing: -0.05em;
  line-height: 1.4;
}

/* 3D Pixel Button Effect with Border Highlight */
.pixel-3d-button {
  position: relative;
  background-color: #fcd34d; /* yellow-300 */
  color: #000;
  font-family: var(--font-pixel);
  border: 2px solid #000;
  border-radius: 4px;
  box-shadow: 0 4px 0 #b7940a, 0 5px 5px rgba(0, 0, 0, 0.5), inset 0 1px 0 rgba(255, 255, 255, 0.5), 0 0 6px 1px
    rgba(255, 215, 0, 0.4);
  transition: all 0.1s ease;
  transform: translateY(0);
  text-transform: none;
  font-weight: bold;
  letter-spacing: 0.5px;
  text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.2);
}

.pixel-3d-button::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 50%;
  background: linear-gradient(rgba(255, 255, 255, 0.3), transparent);
  border-radius: 2px 2px 0 0;
  pointer-events: none;
}

/* Border highlight effect */
.pixel-3d-button::after {
  content: "";
  position: absolute;
  left: -2px;
  right: -2px;
  bottom: -6px;
  height: 4px;
  background-color: #000;
  border-bottom-left-radius: 4px;
  border-bottom-right-radius: 4px;
  box-shadow: 0 0 6px 1px rgba(255, 215, 0, 0.6); /* Golden glow around the border */
}

.pixel-3d-button:hover {
  transform: translateY(2px);
  box-shadow: 0 2px 0 #b7940a, 0 3px 3px rgba(0, 0, 0, 0.4), inset 0 1px 0 rgba(255, 255, 255, 0.5), 0 0 8px 2px
    rgba(255, 215, 0, 0.5);
}

.pixel-3d-button:active {
  transform: translateY(4px);
  box-shadow: 0 0 0 #b7940a, 0 1px 1px rgba(0, 0, 0, 0.3), inset 0 1px 0 rgba(255, 255, 255, 0.5), 0 0 10px 2px
    rgba(255, 215, 0, 0.6);
}

/* Custom pixel-style button effects */
@layer components {
  .pixel-button {
    @apply relative inline-block font-pixel text-black bg-yellow-400 
           hover:bg-yellow-300 transition-colors px-4 py-2 
           border-b-4 border-yellow-600 active:border-b-0 
           active:translate-y-1 active:mb-1;
  }
}

/* Responsive button styles */
@media (max-width: 768px) {
  .responsive-button {
    font-size: 0.875rem;
    padding: 0.5rem 1rem;
  }
}

@media (min-width: 769px) and (max-width: 1024px) {
  .responsive-button {
    font-size: 1rem;
    padding: 0.5rem 1.25rem;
  }
}

@media (min-width: 1025px) {
  .responsive-button {
    font-size: 1.125rem;
    padding: 0.625rem 1.5rem;
  }
}

/* Pixel text highlight effect - enhanced with thicker border */
.pixel-text-highlight {
  text-shadow:
    3px 3px 0 #000, -3px 3px 0 #000, 3px -3px 0 #000, -3px -3px 0 #000,
    0px 3px 0 #000, 0px -3px 0 #000, 3px 0px 0 #000, -3px 0px 0 #000,
    2px 2px 0 #000, -2px 2px 0 #000, 2px -2px 0 #000, -2px -2px 0 #000,
    1px 3px 0 #000, -1px 3px 0 #000, 1px -3px 0 #000, -1px -3px 0 #000,
    3px 1px 0 #000, -3px 1px 0 #000, 3px -1px 0 #000, -3px -1px 0 #000;
  position: relative;
  display: inline-block;
  padding: 0.1em 0.2em;
  border-radius: 4px;
}

/* Add a class for the hero description text highlight */
.hero-description {
  text-shadow:
    3px 3px 0 #000, -3px 3px 0 #000, 3px -3px 0 #000, -3px -3px 0 #000,
    0px 3px 0 #000, 0px -3px 0 #000, 3px 0px 0 #000, -3px 0px 0 #000,
    2px 2px 0 #000, -2px 2px 0 #000, 2px -2px 0 #000, -2px -2px 0 #000,
    1px 3px 0 #000, -1px 3px 0 #000, 1px -3px 0 #000, -1px -3px 0 #000,
    3px 1px 0 #000, -3px 1px 0 #000, 3px -1px 0 #000, -3px -1px 0 #000;
}

/* Fixed hero background */
.hero-background {
  background-attachment: fixed;
}

/* Enhanced animations */
@keyframes float {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes float-reverse {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(10px);
  }
}

@keyframes glow {
  0%,
  100% {
    text-shadow: 0 0 5px rgba(253, 224, 71, 0.5);
  }
  50% {
    text-shadow: 0 0 20px rgba(253, 224, 71, 0.8), 0 0 30px rgba(253, 224, 71, 0.4);
  }
}

@keyframes pulse-slow {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
}

@keyframes bounce-slow {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-5px);
  }
}

@keyframes fade-in {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fade-in-left {
  0% {
    opacity: 0;
    transform: translateX(-30px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fade-in-right {
  0% {
    opacity: 0;
    transform: translateX(30px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes scale-in {
  0% {
    opacity: 0;
    transform: scale(0.8);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes pixel-shift {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 30px 30px;
  }
}

@keyframes glitch {
  0% {
    transform: translate(0);
  }
  20% {
    transform: translate(-2px, 2px);
  }
  40% {
    transform: translate(-2px, -2px);
  }
  60% {
    transform: translate(2px, 2px);
  }
  80% {
    transform: translate(2px, -2px);
  }
  100% {
    transform: translate(0);
  }
}

@keyframes rotate-slow {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes shake {
  0%,
  100% {
    transform: translateX(0);
  }
  10%,
  30%,
  50%,
  70%,
  90% {
    transform: translateX(-2px);
  }
  20%,
  40%,
  60%,
  80% {
    transform: translateX(2px);
  }
}

@keyframes flicker {
  0%,
  100% {
    opacity: 1;
  }
  10% {
    opacity: 0.8;
  }
  20% {
    opacity: 1;
  }
  30% {
    opacity: 0.6;
  }
  40% {
    opacity: 1;
  }
  50% {
    opacity: 0.9;
  }
  60% {
    opacity: 1;
  }
  70% {
    opacity: 0.7;
  }
  80% {
    opacity: 1;
  }
  90% {
    opacity: 0.8;
  }
}

@keyframes slide-in-right {
  0% {
    transform: translateX(100%) scale(0.8);
    opacity: 0;
  }
  100% {
    transform: translateX(0) scale(1);
    opacity: 1;
  }
}

@keyframes slide-in-left {
  0% {
    transform: translateX(-100%) scale(0.8);
    opacity: 0;
  }
  100% {
    transform: translateX(0) scale(1);
    opacity: 1;
  }
}

@keyframes slide-out-right {
  0% {
    transform: translateX(0) scale(1);
    opacity: 1;
  }
  100% {
    transform: translateX(100%) scale(0.8);
    opacity: 0;
  }
}

@keyframes slide-out-left {
  0% {
    transform: translateX(0) scale(1);
    opacity: 1;
  }
  100% {
    transform: translateX(-100%) scale(0.8);
    opacity: 0;
  }
}

.animate-float {
  animation: float 6s ease-in-out infinite;
}

.animate-float-reverse {
  animation: float-reverse 6s ease-in-out infinite;
}

.animate-glow {
  animation: glow 3s ease-in-out infinite;
}

.animate-pulse-slow {
  animation: pulse-slow 3s ease-in-out infinite;
}

.animate-bounce-slow {
  animation: bounce-slow 3s ease-in-out infinite;
}

.animate-fade-in {
  animation: fade-in 0.8s ease-out forwards;
  opacity: 0;
}

.animate-fade-in-left {
  animation: fade-in-left 0.8s ease-out forwards;
  opacity: 0;
}

.animate-fade-in-right {
  animation: fade-in-right 0.8s ease-out forwards;
  opacity: 0;
}

.animate-scale-in {
  animation: scale-in 0.8s ease-out forwards;
  opacity: 0;
}

.animate-glitch {
  animation: glitch 0.5s ease-in-out infinite;
}

.animate-rotate-slow {
  animation: rotate-slow 20s linear infinite;
}

.animate-shake {
  animation: shake 0.5s ease-in-out;
}

.animate-flicker {
  animation: flicker 2s linear infinite;
}

.duration-600 {
  transition-duration: 600ms;
}

.duration-700 {
  transition-duration: 700ms;
}

.duration-800 {
  transition-duration: 800ms;
}

.slide-in-right {
  animation: slide-in-right 600ms ease-out forwards;
}

.slide-in-left {
  animation: slide-in-left 600ms ease-out forwards;
}

.slide-out-right {
  animation: slide-out-right 600ms ease-in forwards;
}

.slide-out-left {
  animation: slide-out-left 600ms ease-in forwards;
}

.delay-100 {
  animation-delay: 0.1s;
}

.delay-200 {
  animation-delay: 0.2s;
}

.delay-300 {
  animation-delay: 0.3s;
}

.delay-400 {
  animation-delay: 0.4s;
}

.delay-500 {
  animation-delay: 0.5s;
}

.delay-600 {
  animation-delay: 0.6s;
}

.delay-700 {
  animation-delay: 0.7s;
}

.delay-800 {
  animation-delay: 0.8s;
}

.delay-900 {
  animation-delay: 0.9s;
}

.delay-1000 {
  animation-delay: 1s;
}

.delay-1200 {
  animation-delay: 1.2s;
}

.delay-1500 {
  animation-delay: 1.5s;
}

.delay-1700 {
  animation-delay: 1.7s;
}

.delay-2000 {
  animation-delay: 2s;
}

.animate-pixel-shift {
  animation: pixel-shift 2s linear infinite;
}

/* Button hover animations */
.btn-hover-effect {
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
}

.btn-hover-effect:before {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: all 0.6s ease;
}

.btn-hover-effect:hover:before {
  left: 100%;
}

/* Scroll reveal animations */
.reveal {
  position: relative;
  opacity: 0;
  transition: all 0.8s ease;
}

.reveal.active {
  opacity: 1;
}

.reveal-left {
  transform: translateX(-50px);
}

.reveal-right {
  transform: translateX(50px);
}

.reveal-up {
  transform: translateY(50px);
}

.reveal-down {
  transform: translateY(-50px);
}

.reveal-scale {
  transform: scale(0.9);
}

.reveal.active.reveal-left,
.reveal.active.reveal-right,
.reveal.active.reveal-up,
.reveal.active.reveal-down,
.reveal.active.reveal-scale {
  transform: translate(0) scale(1);
}

/* Pixel dust particles */
.pixel-dust {
  position: relative;
}

.pixel-dust::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: radial-gradient(circle, rgba(255, 255, 255, 0.8) 1px, transparent 1px),
    radial-gradient(circle, rgba(255, 255, 255, 0.5) 1px, transparent 1px);
  background-size: 20px 20px;
  background-position: 0 0, 10px 10px;
  animation: pixel-shift 20s linear infinite;
  opacity: 0.1;
  pointer-events: none;
}

/* Responsive text alignment */
@media (max-width: 768px) {
  .md\:text-left {
    text-align: center !important;
  }
}
